import org.vertx.java.core.Handler
import org.vertx.java.platform.PlatformLocator
import org.vertx.java.platform.impl.ModuleClassLoader

// This sets up the classpath for the script itself
// This is required for the class imports above
buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
  }

  dependencies {
    classpath "io.vertx:vertx-core:$vertxVersion"
    classpath "io.vertx:vertx-platform:$vertxVersion"
  }
}

task("run-$project.artifact", dependsOn: copyMod, description: 'Run the module using all the build dependencies (not using installed vertx)') << {
  def mutex = new Object()

  ModuleClassLoader.reverseLoadOrder = false
  def pm = PlatformLocator.factory.createPlatformManager()
  pm.deployModule(project.moduleName, null, 1, new Handler<String>() {
    public void handle(String deploymentID) {
      if (!deploymentID){
        error 'Verticle failed to deploy.'

        // Wake the main thread
        synchronized(mutex){
          mutex.notify()
        }
        return
      }

      info "Verticle deployed! Deployment ID is: $deploymentID"
      info 'CTRL-C to stop server'
    }
  });

  // Waiting thread so that Verticle will continue running
  synchronized (mutex){
    mutex.wait()
  }
}