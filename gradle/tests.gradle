apply plugin: 'jacoco'

test {
  include '**/integration/**'

  environment 'GRADLE_HOME', gradle.gradleHomeDir

  doLast {
    println "Unit Test Report Url: file://${reports.html.entryPoint}"
  }
}

task integrationTest(type: JavaExec) {
  main = 'org.gradle.launcher.GradleMain'
  workingDir = 'testprojects'

  // IMPORTANT: do not offload to the daemon, you won't get coverage data if you do since the daemon runs in a isolated process
  args += '--no-daemon'
  args += '--rerun-tasks'
  args += '-PpluginClasspath=../build/classes/main'
  args += ':test'

  classpath += files("${gradle.gradleHomeDir}/lib/gradle-launcher-2.0.jar")

  mustRunAfter test
}

jacoco.applyTo integrationTest
check.dependsOn integrationTest

// setup reports
jacocoTestReport {
  executionData integrationTest

  doLast {
    println "Jacoco Overall Test Report Url: file://${reports.html.entryPoint}"
  }
}

task jacocoIntegrationTestReport(type: JacocoReport) {
  executionData integrationTest
  sourceSets sourceSets.main

  reports.html.destination = "$buildDir/reports/jacoco/integration/html"
  reports.xml.destination = "$buildDir/reports/jacoco/integration/xml"
  reports.csv.destination = "$buildDir/reports/jacoco/integration/csv"

  mustRunAfter integrationTest

  doLast {
    println "Jacoco Integration Test Report Url: file://${reports.html.entryPoint}"
  }
}

task jacocoUnitTestReport(type: JacocoReport) {
  executionData test
  sourceSets sourceSets.main

  reports.html.destination = "$buildDir/reports/jacoco/unit/html"
  reports.xml.destination = "$buildDir/reports/jacoco/unit/xml"
  reports.csv.destination = "$buildDir/reports/jacoco/unit/csv"

  mustRunAfter test

  doLast {
    println "Jacoco Unit Test Report Url: file://${reports.html.entryPoint}"
  }
}

task jacocoTestReportAll {
  dependsOn jacocoTestReport, jacocoUnitTestReport, jacocoIntegrationTestReport
}